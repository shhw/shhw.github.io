<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Shhw&#39;s Blog</title>
  
  <subtitle>Aspire to inspire until I expire.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://shhw.github.io/"/>
  <updated>2019-02-17T14:08:57.386Z</updated>
  <id>http://shhw.github.io/</id>
  
  <author>
    <name>shhw</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>scipy.cluster模块实现kmeans聚类</title>
    <link href="http://shhw.github.io/scipy-cluster%E6%A8%A1%E5%9D%97%E5%AE%9E%E7%8E%B0kmeans%E8%81%9A%E7%B1%BB/"/>
    <id>http://shhw.github.io/scipy-cluster模块实现kmeans聚类/</id>
    <published>2019-02-17T14:03:17.000Z</published>
    <updated>2019-02-17T14:08:57.386Z</updated>
    
    <content type="html"><![CDATA[<p>简单验证该模块功能<br><a id="more"></a><br><strong><em>whiten（数组）</em></strong> 函数：先将数组各列求标准差，然后将数组每个元素分别除以该标准差</p><p>例如：</p><blockquote><p>[[1,1],<br>[1,0],<br>[5,5]<br>[5,4]]</p></blockquote><p>二维数组，第一列1,1,5,5标准差为2，则该函数输出结果第一列分别为0.5,0.5,2.5,2.5</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import numpy</span><br><span class="line">from scipy.cluster.vq import *</span><br><span class="line"></span><br><span class="line">matrix = [[1, 1], [1, 0], [5, 5], [5, 4]]</span><br><span class="line">numpy_matrix = numpy.array(matrix)</span><br><span class="line">whitened = whiten(numpy_matrix)</span><br><span class="line">print whitened</span><br><span class="line">ret, info = kmeans(whitened, 2)</span><br><span class="line">print ret</span><br><span class="line">print info</span><br><span class="line">classic_info = vq(numpy_matrix, ret)[0]</span><br><span class="line">print classic_info</span><br></pre></td></tr></table></figure><p><strong><em>kmeans(whitened, 2)</em></strong> 返回第一个元素为2个中心点，即聚类中心<br><strong><em>vq(numpy_matrix, ret)[0]</em></strong> 返回一列数[0,0,1,1]分别表示第一个坐标点属于第0类，第二个属于第0类，第三个属于第一类，第四个属于第一类。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;简单验证该模块功能&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="基础算法" scheme="http://shhw.github.io/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="python" scheme="http://shhw.github.io/tags/python/"/>
    
      <category term="Kmeans" scheme="http://shhw.github.io/tags/Kmeans/"/>
    
  </entry>
  
  <entry>
    <title>c++连接mysql的中文编码问题</title>
    <link href="http://shhw.github.io/c-%E8%BF%9E%E6%8E%A5mysql%E7%9A%84%E4%B8%AD%E6%96%87%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98/"/>
    <id>http://shhw.github.io/c-连接mysql的中文编码问题/</id>
    <published>2019-02-17T14:01:03.000Z</published>
    <updated>2019-02-17T14:02:32.612Z</updated>
    
    <content type="html"><![CDATA[<p>c++连接mysql时，比如查询语句中含有中文，或者得到结果中含有中文，经常出现编译出错或乱码问题。<br>VS编译器默认使用gbk编码。<br><a id="more"></a><br>如果将mysql设置为utf-8编码，则需要先将c++中的各种中文字符串转为utf-8编码输入mysql，得到的结果为utf-8编码，需要转为gbk才能正常显示。转来转去很麻烦。<br>换个角度，将mysql设置为gbk编码，这不就大功告成了吗?附代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;winsock2.h&gt;</span><br><span class="line">#include &quot;mysql.h&quot;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line">int main(int argc, char* argv[])</span><br><span class="line">&#123;</span><br><span class="line">mysql_library_init(NULL, 0, 0);</span><br><span class="line">MYSQL mysql;</span><br><span class="line">mysql_init(&amp;mysql);</span><br><span class="line"></span><br><span class="line">if (0 == mysql_options(&amp;mysql, MYSQL_SET_CHARSET_NAME, &quot;gbk&quot;))//设置字符集</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; &quot;设置字符集成功\n\n&quot; &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (!mysql_real_connect(&amp;mysql, &quot;localhost&quot;, &quot;root&quot;, &quot;123456&quot;, &quot;测试&quot;, 3306, NULL, CLIENT_MULTI_STATEMENTS))//连接数据库</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; &quot;not connect mysql&quot; &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; &quot;welcome to mysql\n\n\n&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mysql_query(&amp;mysql, &quot;select * from 学生信息&quot;);          //执行SQL语句</span><br><span class="line">MYSQL_RES *result = mysql_use_result(&amp;mysql);       //获取资源</span><br><span class="line">int rowcount = mysql_num_rows(result);                //获取记录数</span><br><span class="line">unsigned int fieldcount = mysql_num_fields(result);   //获取字段数</span><br><span class="line"></span><br><span class="line">MYSQL_FIELD *field = NULL;                            //字段</span><br><span class="line">MYSQL_ROW row = NULL;                         //记录</span><br><span class="line">while (row = mysql_fetch_row(result))</span><br><span class="line">&#123;</span><br><span class="line">for (unsigned int i = 0; i&lt;fieldcount; i++)</span><br><span class="line">&#123;</span><br><span class="line">field = mysql_fetch_field_direct(result, i);</span><br><span class="line">cout &lt;&lt; field-&gt;name &lt;&lt; &quot;:&quot; &lt;&lt; row[i] &lt;&lt; &quot;\n&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mysql_free_result(result);</span><br><span class="line">mysql_close(&amp;mysql);</span><br><span class="line">mysql_server_end();</span><br><span class="line">mysql_library_end();</span><br><span class="line"></span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;c++连接mysql时，比如查询语句中含有中文，或者得到结果中含有中文，经常出现编译出错或乱码问题。&lt;br&gt;VS编译器默认使用gbk编码。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://shhw.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="C++" scheme="http://shhw.github.io/tags/C/"/>
    
      <category term="MySQL" scheme="http://shhw.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>01背包、完全背包、多重背包问题的C++实现及路径记录</title>
    <link href="http://shhw.github.io/01%E8%83%8C%E5%8C%85%E3%80%81%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85%E3%80%81%E5%A4%9A%E9%87%8D%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98%E7%9A%84C-%E5%AE%9E%E7%8E%B0%E5%8F%8A%E8%B7%AF%E5%BE%84%E8%AE%B0%E5%BD%95/"/>
    <id>http://shhw.github.io/01背包、完全背包、多重背包问题的C-实现及路径记录/</id>
    <published>2019-02-17T13:57:09.000Z</published>
    <updated>2019-02-17T14:08:16.466Z</updated>
    
    <content type="html"><![CDATA[<p>这里主要实现路径记录，只求最值问题移步</p><blockquote><p><a href="01背包、完全背包、多重背包问题的C-实现">01背包、完全背包、多重背包问题的C++实现</a><br><a id="more"></a><br>以下均打印输出路径，即装入背包的物品序号，和最大值。</p></blockquote><h2 id="01背包问题"><a href="#01背包问题" class="headerlink" title="01背包问题"></a>01背包问题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int total_weight = 10;</span><br><span class="line">int w[6] = &#123; 0,5,4,3,2,1 &#125;;</span><br><span class="line">int v[6] = &#123; 0,1,2,3,4,5 &#125;;</span><br><span class="line">int dp[11] = &#123; 0 &#125;;</span><br><span class="line">int path[6][11] = &#123; 0 &#125;;</span><br><span class="line"></span><br><span class="line">for (int i = 1; i &lt;= 5; i++)</span><br><span class="line">for (int j = 10; j &gt;= w[i]; j--)</span><br><span class="line">if (dp[j] &lt; dp[j - w[i]] + v[i])</span><br><span class="line">&#123;</span><br><span class="line">dp[j] = dp[j - w[i]] + v[i];</span><br><span class="line">path[i][j] = 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int i = 5, j = 10;</span><br><span class="line">while (i &gt; 0 &amp;&amp; j &gt; 0)</span><br><span class="line">&#123;</span><br><span class="line">if (path[i][j] == 1)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; i &lt;&lt; &apos; &apos;;</span><br><span class="line">j -= w[i];</span><br><span class="line">&#125;</span><br><span class="line">i--;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; &quot;总的价值为: &quot; &lt;&lt; dp[10] &lt;&lt; endl;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完全背包问题"><a href="#完全背包问题" class="headerlink" title="完全背包问题"></a>完全背包问题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int total_weight = 10;</span><br><span class="line">int w[6] = &#123; 0,5,4,3,2,1 &#125;;</span><br><span class="line">int v[6] = &#123; 0,1,2,3,4,5 &#125;;</span><br><span class="line">int dp[11] = &#123; 0 &#125;;</span><br><span class="line">int path[6][11] = &#123; 0 &#125;;</span><br><span class="line"></span><br><span class="line">for (int i = 1; i &lt;= 5; i++)</span><br><span class="line">for (int j = w[i]; j &lt;= 10; j++)</span><br><span class="line">if (dp[j] &lt; dp[j - w[i]] + v[i])</span><br><span class="line">&#123;</span><br><span class="line">dp[j] = dp[j - w[i]] + v[i];</span><br><span class="line">path[i][j]=1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int i = 5, j = 10;</span><br><span class="line">while (i &gt; 0 &amp;&amp; j &gt; 0)</span><br><span class="line">&#123;</span><br><span class="line">if (path[i][j] == 1)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; i &lt;&lt; &apos; &apos;;</span><br><span class="line">j -= w[i];</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">i--;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; &quot;总的价值为: &quot; &lt;&lt; dp[10] &lt;&lt; endl;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="多重背包问题"><a href="#多重背包问题" class="headerlink" title="多重背包问题"></a>多重背包问题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int total_weight = 10;</span><br><span class="line">int w[6] = &#123; 0,5,4,3,2,1 &#125;;</span><br><span class="line">int v[6] = &#123; 0,1,2,3,4,5 &#125;;</span><br><span class="line">int cot[6] = &#123; 0,1,2,1,2,1 &#125;;</span><br><span class="line">int dp[11] = &#123; 0 &#125;;</span><br><span class="line">int path[6][11] = &#123; 0 &#125;;</span><br><span class="line"></span><br><span class="line">for (int i = 1; i &lt;= 5; i++)</span><br><span class="line">for (int k = 1; k &lt;= cot[i]; k++)</span><br><span class="line">for (int j = 10; j &gt;= w[i]; j--)</span><br><span class="line">if (dp[j] &lt; dp[j - w[i]] + v[i])</span><br><span class="line">&#123;</span><br><span class="line">dp[j] = dp[j - w[i]] + v[i];</span><br><span class="line">path[i][j] = 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int i = 5, j = 10;</span><br><span class="line">while (i &gt; 0 &amp;&amp; j &gt; 0)</span><br><span class="line">&#123;</span><br><span class="line">if (path[i][j] == 1&amp;&amp;cot[i])</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; i &lt;&lt; &apos; &apos;;</span><br><span class="line">j -= w[i];</span><br><span class="line">cot[i]--;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">i--;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; &quot;总的价值为: &quot; &lt;&lt; dp[10] &lt;&lt; endl;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里主要实现路径记录，只求最值问题移步&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;01背包、完全背包、多重背包问题的C-实现&quot;&gt;01背包、完全背包、多重背包问题的C++实现&lt;/a&gt;&lt;br&gt;&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="基础算法" scheme="http://shhw.github.io/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="C++" scheme="http://shhw.github.io/tags/C/"/>
    
      <category term="背包问题" scheme="http://shhw.github.io/tags/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>用python快速将excel（含多sheet）导入MySQL（兼容中文）</title>
    <link href="http://shhw.github.io/%E7%94%A8python%E5%BF%AB%E9%80%9F%E5%B0%86excel%EF%BC%88%E5%90%AB%E5%A4%9Asheet%EF%BC%89%E5%AF%BC%E5%85%A5MySQL%EF%BC%88%E5%85%BC%E5%AE%B9%E4%B8%AD%E6%96%87%EF%BC%89/"/>
    <id>http://shhw.github.io/用python快速将excel（含多sheet）导入MySQL（兼容中文）/</id>
    <published>2019-02-17T13:43:15.000Z</published>
    <updated>2019-02-17T13:44:15.746Z</updated>
    
    <content type="html"><![CDATA[<p>需要使用xlrd和MySQLdb库，可自行百度下载。<br><a id="more"></a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">#coding:utf-8</span><br><span class="line"></span><br><span class="line">import xlrd</span><br><span class="line">import MySQLdb</span><br><span class="line"></span><br><span class="line">data=xlrd.open_workbook(r&apos;F:\test\baseParam.xls&apos;) #读取表格</span><br><span class="line">db=&quot;测试&quot; #需要操作的数据库</span><br><span class="line"></span><br><span class="line">conn= MySQLdb.connect(</span><br><span class="line">        host=&apos;localhost&apos;,   </span><br><span class="line">        port = 3306,</span><br><span class="line">        user=&apos;root&apos;,</span><br><span class="line">        passwd=&apos;123456&apos;,</span><br><span class="line">charset=&apos;utf8&apos;</span><br><span class="line">        )   #连接mysql</span><br><span class="line">cur=conn.cursor()</span><br><span class="line">cur.execute(&quot;drop database if exists &quot;+db)  </span><br><span class="line">cur.execute(&quot;create database &quot;+db)  </span><br><span class="line">conn.select_db(db)  #初始化数据库</span><br><span class="line"></span><br><span class="line">sheet_names=data.sheet_names()</span><br><span class="line">for sheet_name in sheet_names:</span><br><span class="line">sheet=data.sheet_by_name(sheet_name)</span><br><span class="line">row_data=sheet.row_values(0)</span><br><span class="line">row_data=&apos; varchar(256) DEFAULT NULL, &apos;.join(row_data)</span><br><span class="line">row_data=row_data+&apos; varchar(256) DEFAULT NULL&apos;</span><br><span class="line">cur.execute(&apos;create table &apos;+sheet_name+&apos;(&apos;+row_data+&apos;)&apos;) #数据库中创建表格</span><br><span class="line">ss=&apos;&apos;</span><br><span class="line">for index in range(sheet.ncols):</span><br><span class="line">ss=ss+&apos;%s, &apos;</span><br><span class="line">ss=ss.rstrip(&apos;, &apos;)</span><br><span class="line">sql=&quot;insert &quot;+ sheet_name+ &quot; values(&quot; +ss +&quot;)&quot;</span><br><span class="line">param=[]</span><br><span class="line">for index in range(1,sheet.nrows):</span><br><span class="line">row_values=sheet.row_values(index)</span><br><span class="line">param.append(row_values)</span><br><span class="line">cur.executemany(sql,param) #插入数据</span><br><span class="line">conn.commit()</span><br><span class="line"></span><br><span class="line">cur.close()  </span><br><span class="line">conn.close()  #释放数据连接</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;需要使用xlrd和MySQLdb库，可自行百度下载。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://shhw.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="MySQL" scheme="http://shhw.github.io/tags/MySQL/"/>
    
      <category term="python" scheme="http://shhw.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>01背包、完全背包、多重背包问题的C++实现</title>
    <link href="http://shhw.github.io/01%E8%83%8C%E5%8C%85%E3%80%81%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85%E3%80%81%E5%A4%9A%E9%87%8D%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98%E7%9A%84C-%E5%AE%9E%E7%8E%B0/"/>
    <id>http://shhw.github.io/01背包、完全背包、多重背包问题的C-实现/</id>
    <published>2019-02-17T13:20:17.000Z</published>
    <updated>2019-02-17T13:37:56.480Z</updated>
    
    <content type="html"><![CDATA[<h2 id="01背包问题"><a href="#01背包问题" class="headerlink" title="01背包问题"></a>01背包问题</h2><p>容量为10的背包，有5种物品，每种物品只有一个，其重量分别为5，4，3，2，1，其价值分别为1，2，3，4，5。<br>设计算法，实现背包内物品价值最大。<br><a id="more"></a><br>代码如下（输出14）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int main() </span><br><span class="line">&#123;</span><br><span class="line">int total_weight = 10;</span><br><span class="line">int w[6] = &#123; 0,5,4,3,2,1&#125;;</span><br><span class="line">int v[6] = &#123; 0,1,2,3,4,5&#125;;</span><br><span class="line">int dp[11] = &#123; 0 &#125;;</span><br><span class="line"></span><br><span class="line">for (int i = 1; i &lt;= 5; i++)</span><br><span class="line">for (int j = 10; j &gt;= w[i]; j--)</span><br><span class="line">dp[j] = max(dp[j], dp[j - w[i]] + v[i]);</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; &quot;总的价值为: &quot; &lt;&lt; dp[10] &lt;&lt; endl;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完全背包问题"><a href="#完全背包问题" class="headerlink" title="完全背包问题"></a>完全背包问题</h2><p>容量为10的背包，有5种物品，每种物品数量无限，其重量分别为5，4，3，2，1，其价值分别为1，2，3，4，5。<br>设计算法，实现背包内物品价值最大。<br>代码如下（输出50）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int main() </span><br><span class="line">&#123;</span><br><span class="line">int total_weight = 10;</span><br><span class="line">int w[6] = &#123; 0,5,4,3,2,1&#125;;</span><br><span class="line">int v[6] = &#123; 0,1,2,3,4,5&#125;;</span><br><span class="line">int dp[11] = &#123; 0 &#125;;</span><br><span class="line"></span><br><span class="line">for (int i = 1; i &lt;= 5; i++)</span><br><span class="line">for (int j = w[i]; j &lt;= 10;j++)</span><br><span class="line">dp[j] = max(dp[j],dp[j - w[i]] + v[i]);</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; &quot;总的价值为: &quot; &lt;&lt; dp[10] &lt;&lt; endl;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="多重背包问题"><a href="#多重背包问题" class="headerlink" title="多重背包问题"></a>多重背包问题</h2><p>容量为10的背包，有5种物品，每种物品数量分别为1，2，1，2，1，其重量分别为5，4，3，2，1，其价值分别为1，2，3，4，5。<br>设计算法，实现背包内物品价值最大。<br>代码如下（输出16）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int total_weight = 10;</span><br><span class="line">int w[6] = &#123; 0,5,4,3,2,1 &#125;;</span><br><span class="line">int v[6] = &#123; 0,1,2,3,4,5 &#125;;</span><br><span class="line">int cot[6] = &#123; 0,1,2,1,2,1 &#125;;</span><br><span class="line">int dp[11] = &#123; 0 &#125;;</span><br><span class="line"></span><br><span class="line">for (int i = 1; i &lt;= 5; i++)</span><br><span class="line">for (int k = 1; k &lt;= cot[i];k++)</span><br><span class="line">for (int j = 10; j &gt;= w[i]; j--)</span><br><span class="line">dp[j] = max(dp[j], dp[j - w[i]] + v[i]);</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; &quot;总的价值为: &quot; &lt;&lt; dp[10] &lt;&lt; endl;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;01背包问题&quot;&gt;&lt;a href=&quot;#01背包问题&quot; class=&quot;headerlink&quot; title=&quot;01背包问题&quot;&gt;&lt;/a&gt;01背包问题&lt;/h2&gt;&lt;p&gt;容量为10的背包，有5种物品，每种物品只有一个，其重量分别为5，4，3，2，1，其价值分别为1，2，3，4，5。&lt;br&gt;设计算法，实现背包内物品价值最大。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="基础算法" scheme="http://shhw.github.io/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="C++" scheme="http://shhw.github.io/tags/C/"/>
    
      <category term="背包问题" scheme="http://shhw.github.io/tags/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>hexo-github遇到的各种问题</title>
    <link href="http://shhw.github.io/hexo-github%E9%81%87%E5%88%B0%E7%9A%84%E5%90%84%E7%A7%8D%E9%97%AE%E9%A2%98/"/>
    <id>http://shhw.github.io/hexo-github遇到的各种问题/</id>
    <published>2019-02-15T16:55:15.000Z</published>
    <updated>2019-02-17T12:07:49.241Z</updated>
    
    <content type="html"><![CDATA[<h2 id="新电脑如何编写博客"><a href="#新电脑如何编写博客" class="headerlink" title="新电脑如何编写博客"></a>新电脑如何编写博客</h2><p>一、 配置</p><ol><li>旧电脑hexo文件夹拷贝到新电脑，建议备份到github，然后新电脑更新即可，如果themes文件夹下存在.git，则删除后更新到github，如果github上themes文件夹还没有正确更新，则需要在themes文件夹下运行如下命令清除缓存再次更新。<a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rm -r --cached .</span><br></pre></td></tr></table></figure></li></ol><p><img src="/hexo-github遇到的各种问题/1.png" alt></p><center><font size="2">本地文件夹</font></center><p><img src="/hexo-github遇到的各种问题/2.png" alt></p><center><font size="2">github文件夹</font></center><ol start="2"><li><p>新电脑需要配置Node.js环境和git环境，安装hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo -g</span><br></pre></td></tr></table></figure></li><li><p>在hexo文件夹下运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></li></ol><p>二、编写博客</p><ol><li><p>新建并生成博客，可以用<code>hexo s</code>本地查看</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo new post &quot;你好，hexo&quot;</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></li><li><p>更新hexo文件夹到github</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;注释&quot;</span><br><span class="line">git push</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;新电脑如何编写博客&quot;&gt;&lt;a href=&quot;#新电脑如何编写博客&quot; class=&quot;headerlink&quot; title=&quot;新电脑如何编写博客&quot;&gt;&lt;/a&gt;新电脑如何编写博客&lt;/h2&gt;&lt;p&gt;一、 配置&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;旧电脑hexo文件夹拷贝到新电脑，建议备份到github，然后新电脑更新即可，如果themes文件夹下存在.git，则删除后更新到github，如果github上themes文件夹还没有正确更新，则需要在themes文件夹下运行如下命令清除缓存再次更新。&lt;/li&gt;&lt;/ol&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://shhw.github.io/hello-world/"/>
    <id>http://shhw.github.io/hello-world/</id>
    <published>2019-02-15T14:35:19.950Z</published>
    <updated>2019-02-15T14:35:19.950Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>gg</title>
    <link href="http://shhw.github.io/gg/"/>
    <id>http://shhw.github.io/gg/</id>
    <published>2019-02-15T12:09:15.000Z</published>
    <updated>2019-02-15T14:35:19.950Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
</feed>
